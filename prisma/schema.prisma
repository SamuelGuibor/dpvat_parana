generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  cpf           String?   @unique
  data_nasc     DateTime?
  email         String    @unique
  password      String?
  rua           String?
  bairro        String?
  numero        String?
  cep           String?
  image         String?
  emailVerified DateTime?
  role          String    @default("USER")
  rg            String?
  nome_mae      String?
  telefone      String?
  cidade        String?
  estado        String?
  estado_civil  String?
  profissao     String?
  nacionalidade String?

  accounts  Account[]
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  acidente Acidente?
  status   Status?
}

model Acidente {
  id              String    @id @default(cuid())
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId          String    @unique
  data_acidente   DateTime?
  atendimento_via String?
  hospital        String?
  outro_hospital  String?
  lesoes          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Status {
  ENVIO
  SOLICITACAO
  COLETA
  ANALISE
  PERICIA
}

model Account {
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@id([provider, providerAccountId])
}

model Session {
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model VerificationToken {
  identifier String
  token      String
  expires    DateTime

  @@id([identifier, token])
}
